Python 解释器一般安装在 /usr/local/bin/python3.9 路径下；将 /usr/local/bin 加入 Unix 终端的搜索路径，键入以下命令就可以启动 Python：
python3.9
这样，就可以在 shell 中运行 Python 了 1 。因为可以选择安装目录，解释器也有可能安装在别的位置；如果还不明白，就去问问身边的 Python 大神或系统管理员。（例如，常见备选路径还有 /usr/local/python。）
Windows 系统中，从 Microsoft Store 安装 Python 后，就可以使用 python3.9 命令了。 如果安装了 py.exe 启动器，则可以使用 py 命令。 请参阅 附录：设置环境变量，了解其他启动 Python 的方式。
在主提示符中，输入文件结束符（Unix 里是 Control-D，Windows 里是 Control-Z），就会退出解释器，退出状态码为 0。如果不能退出，还可以输入这个命令：quit()。
在支持 GNU Readline 库的系统中，解释器的行编辑功能包括交互式编辑、历史替换、代码补全等。检测是否支持命令行编辑最快速的方式是，在首次出现 Python 提示符时，输入 Control-P。听到“哔”提示音，说明支持行编辑；请参阅附录 交互式编辑和编辑历史，了解功能键。如果没有反应，或回显了 ^P，则说明不支持行编辑；只能用退格键删除当前行的字符。
解释器的操作方式类似 Unix Shell：用与 tty 设备关联的标准输入调用时，可以交互式地读取和执行命令；以文件名参数，或标准输入文件调用时，则读取并执行文件中的 脚本。
启动解释器的另一种方式是 python -c command [arg] ...，这与 shell 的 -c 选项类似，其中，command 需换成要执行的语句。由于 Python 语句经常包含空格等被 shell 特殊对待的字符，一般情况下，建议用单引号标注整个 command。
Python 模块也可以当作脚本使用。输入：python -m module [arg] ...，会执行 module 的源文件，这跟在命令行把路径写全了一样。
在交互模式下运行脚本文件，只要在脚本名称参数前，加上选项 -i 就可以了。
